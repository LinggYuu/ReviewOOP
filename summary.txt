类是对一类事物的描述,是抽象的、概念上的dinginess
对象是实际存在的该类事物的每个个体,也称为实例
面向对象程序设计的重点是类的设计
设计类,就是设计类的成员
    属性=成员变量=field=域、字段
    方法=成员方法=函数=method
创建类的对象=类的实例化=实例化类

调用对象的结构:属性、方法
    调用属性:"对象.属性"
    调用方法:"对象.方法"

如果创建了一个类的多个对象,则每个对象都有独立的一套类的属性(非static的)
    意味着如果我们修改了一个对象的属性a,不影响另一个对象属性a的值


类中属性的使用
属性(成员变量) vs 局部变量
1.相同点:
    1.1定义变量的格式: 数据类型 变量名 = 变量值
    1.2先声明,后使用
    1.3变量都有其对应的作用域
2.不同点:
    2.1在类中声明的位置不同
        属性:直接定义在类的一对{}内
        局部变量:声明在方法内,方法形参内,代码块内,构造器形参,构造器内部的变量
    2.2关于权限修饰符的不同
        属性:可以在声明属性时,指明其权限,使用权限修饰符
            常用的权限修饰符:private\public\default\protected  -->封装性
        局部变量:不可以使用权限修饰符
    2.3默认初始化值的情况:
        属性:类的属性,根据其类型,都有默认初始化值
            整型(byte\short\int\long):0
            浮点型(float\double):0.0
            字符型(char):0(或'\u0000')
            布尔型(boolean):false
            引用数据类型(类\数组\接口):null
        局部变量:没有默认初始化值
            意味着我们在调用局部变量前一定要显式赋值
            特别的,形参在调用时赋值即可
    2.4二者在内存中加载的位置不同
        属性(非static):加载到对空间中(new的时候的类模板中的属性)
        局部变量:加载到栈空间

   p184