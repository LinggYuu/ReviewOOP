抽象类
随着继承层次中一个个新子类的定义，类变得越来越具体，而父类则越来越一般，更加通用。
类的设计应该保证父类和子类能够共享特征。有时将一个父类设计得非常抽象，以至于它没有具体的实例
这样的类叫做抽象类
    比如说一个学校管理系统中，学生类、教师类等都继承于<人>类，但人这个类并不需要有实例

加了abstract后，这个类就不能在new对象了，就是不能在创建该抽象类的实例了
抽象类 p341


abstract可以用来修饰的结构：类、方法

abstract修饰类：抽象类
        >此类不能够实例化，构造器只能给子类用了
        >抽象类中一定有构造器，但是给子类用的，便于子类实例化时调用。对抽象类自己没用（不能new）

abstract修饰方法：抽象方法
        >抽象方法只有方法的声明，没有方法体
        >包含抽象方法的类一定是抽象类,非抽象类不能声明抽象方法，抽象方法只能在抽象类中
        >抽象类中可以没有抽象方法，可以有非抽象方法
        >子类继承了抽象类后必须要重写抽象方法或该子类也声明为抽象类
            因为继承了之后它里面就有抽象方法了，而只有抽象类里才能有抽象方法，除非重写