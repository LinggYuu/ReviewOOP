1.方法的重载 overload
    1.1概念：同一个类中，允许存在一个以上的同名方法，只要它们的参数个数或者参数类型不同即可。
    1.2特点：与返回值类型无关，只看参数列表，且参数列表必须不同(参数个数或参数类型)
            调用时，根据方法参数列表的不同来区别

    2同1不同：同一个类、相同方法名，参数列表不同：参数个数不同，参数类型不同
    判断重载时与方法的权限修饰符、返回值类型、形参变量名、方法体都没有关系，只看2同1不同

    在通过对象调用方法时，如何确定某一个指定的方法：
                                1.方法名
                                2.参数列表

2.可变个数形参：
    javaSE5中提供了Varargs机制，允许直接定义能和多个实参相匹配的形参。从而可以用一种更简单的
    方式来传递个数可变的实参
    2.1具体使用：
        2.1.1格式： 数据类型...变量名
        2.1.2当调用可变个数形参的方法时，传入的参数个数可以时0,1,2,3,..,n个
        2.1.3这些个参数个数不同的具体方法都是重载
        2.1.4可变个数形参的方法与本类中方法名相同，形参类型也相同的数组之间不构成重载
            即 (string ..s)与(string[] s)不能同时出现
            (string[] s)这种情况需要实际使用时(new String[]{"ss","dd","cc"});
            (string ..s)不用这么麻烦直接("ss","dd","cc");就行
        2.1.5可变个数形参在方法的形参列表中，必须声明在末尾
            即public void xx(int a,String b,String ...c),c参数不能放在前面
        2.1.6可变形参在方法的形参列表中，最多只能声明一个


方法参数的值传递机制

关于变量的赋值：p208
    如果变量是基本数据类型，此时赋值的是变量所保存的数据值
    如果变量是引用数据类型，此时赋值的是变量所保存的数据的地址值
    上面的两句绝对正确

方法形参的值传递：p209,p210


3.方法的重写(override  overwrite)p270
    定义:在子类中可以根据需要对从父类中继承来的方法进行改造,也称为方法的重置、覆盖,在程序执行
    时,子类的方法将会覆盖父类的方法
    要求:
        子类重写的方法必须和父类被重写的方法具有相同的方法名称,参数列表
        子类重写的方法的返回值类型不能大于父类被重写的方法的返回值类型
        子类重写的方法使用的访问权限不能小于父类被重写的方法的访问权限
            子类不能重写父类中声明为private权限的方法
        子类方法抛出的异常不能大于父类被重写方法的异常

    注:子类和父类中同名同参的方法必须同时声明为非static的(即为重写),或者同时声明为static的
    (不是重写)/\.因为static方法是属于类的,子类无法覆盖父类的方法

    应用:重写以后,当创建子类对象后,通过子类对象调用子父类得同名同参的方法时,实际执行的是子类
    重写父类的方法

    重写的规定:
        方法的声明:权限修饰符  返回值类型  方法名(形参列表){方法体}
        约定俗成:子类中的叫重写方法,父类中的叫被重写方法
        1.子类重写方法的方法名和形参列表与父类被重写方法的方法名和形参列表相同
        2.子类重写的方法的权限修饰符不小于父类被重写方法的权限修饰符
            特殊情况:子类不能重写父类中声明为private权限的方法

        3.返回值类型
        >父类被重写方法的返回值类型是void,则子类重写方法的返回值类型也只能是void
        >引用数据类型
        父类被重写方法的返回值类型是A类型,则子类重写方法的返回值类型可以是A类或A类的子类
        >基本数据类型
        父类被重写方法的返回值是基本数据类型,则子类重写方法的返回值类型必须是相同的基本数据类型

        4.异常
            子类重写方法抛出的异常类型不大于父类被重写方法抛出的异常类型

        5.子类和父类的同名同参数方法要么都声明为非static的(考虑重写)要么都声明为static的(不考虑重写)

