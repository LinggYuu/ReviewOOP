接口：
接口和类是两个并列的结构
    一方面：
        有时必须从几个类中派生出一个子类，继承它们所有的属性和方法，但是Java不支持多重继承。
        有了接口就可以得到多重继承的效果
    另一方面：
        有时必须从几个类中抽取出一些共同的行为特征，而它们之间又没有is-a的关系，仅仅是具有相同的行为特征而已
        例如：鼠标，键盘，打印机，摄像头，移动硬盘等都支持USB连接

    接口就是规范，定义的是一组规则，体现了现实世界中"如果你是/要...则必须能..."的思想。继承是一个"是不是"的关系
    而接口实现则是"能不能"的关系。
    接口的本质是契约，标准，规范，就像法律一样。制定好之后大家都要遵守


接口的使用：
    1.接口使用interface来定义
    2.Java中，接口和类是并列的结构
    3.如何定义接口：定义接口中的成员
        3.1JDK7及以前：在接口内：
            只能够定义全局常量和抽象方法
                >全局常量：public static final的
                >抽象方法：public abstract的
p349
        3.2JDK8：
            除了定义全局常量和抽象方法之外，还可以定义静态方法、默认方法


在实际的开发中，如果继承父类后重写了父类的非抽象方法，俗称重写
             如过继承了父类后重写了父类的抽象方法，俗称实现而不是重写
             接口中的方法覆盖与上面说法类似

    4.接口中不能定义构造器

    5.Java开发中，接口通过让类去实现(implements)的方式来使用
        如果实现类覆盖了接口中的所有抽象方法，则此类可以实例化
        如果实现类没有覆盖接口中所有的抽象方法，则此实现类为一个抽象类

    6.Java类可以实现多个接口   --->弥补了Java单继承性的局限性
        格式：class AA extends BB implements CC,DD,EE{}

    7.接口与接口之间可以多继承

    8.接口具体使用，体现多态性(声明的是接口，但实际指向的是实现类)

    9.接口，实际上可以看作是一种规范 p349 UsbTest

接口的应用
    1.接口使用上满足多态性
    2.接口实际定义了一种规范
    3.开发中来体会面向接口编程


创建接口匿名实现类对象






JDBC定义了大量的规范，就比如定义了个add，然后实现这个接口的Mysql类去实现相应方法
在使用声明时声明的参数为接口，真正去调用时就去调Mysql实现类的实际实例对象





项目的具体需求是多变的，我们必须以不变应万变才能从容开发，此处的"不变"就是规范
在开发项目时往往都是面向接口编程